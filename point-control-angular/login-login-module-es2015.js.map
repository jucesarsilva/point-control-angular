{"version":3,"sources":["./src/app/login/login.component.html","./src/app/login/login-routing.module.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/login/login.module.ts","./src/app/login/login.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<section class=\\\"login\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlexFill>\\r\\n  <mat-card fxFlex=\\\"auto\\\">\\r\\n     <form (ngSubmit)=\\\"onLogin()\\\">\\r\\n      <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"auto\\\">\\r\\n          <mat-label>Login</mat-label>\\r\\n          <input matInput [formControl]=\\\"login\\\" required>\\r\\n          <mat-error *ngIf=\\\"login.invalid\\\">{{getErrorMessage('login')}}</mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field appearance=\\\"outline\\\" floatLabel=\\\"auto\\\">\\r\\n          <mat-label>Senha</mat-label>\\r\\n          <input [type]=\\\"visibility ? 'text' : 'password'\\\" matInput [formControl]=\\\"password\\\" required>\\r\\n          <mat-error *ngIf=\\\"password.invalid\\\">{{getErrorMessage('password')}}</mat-error>\\r\\n          <mat-icon class=\\\"visibility\\\" *ngIf=\\\"!visibility\\\" (click)=\\\"visibility = true\\\" matSuffix>visibility_off</mat-icon>\\r\\n          <mat-icon class=\\\"visibility\\\" *ngIf=\\\"visibility\\\" (click)=\\\"visibility = false\\\" matSuffix>visibility</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n        <button type=\\\"submit\\\" color=\\\"primary\\\" mat-flat-button>ACESSAR</button>\\r\\n        <div *ngIf=\\\"error\\\" class=\\\"error m-t-10\\\">Login ou Senha inválido.</div>\\r\\n      </mat-card-actions>\\r\\n     </form>\\r\\n  </mat-card>\\r\\n</section>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [{ path: '', component: LoginComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","module.exports = \".login {\\n  padding: 20px;\\n}\\n.login .mat-card {\\n  padding: 20px;\\n  max-width: 300px;\\n}\\n.login form .mat-form-field {\\n  width: 100%;\\n}\\n.login .visibility {\\n  color: var(--secondary);\\n  cursor: pointer;\\n}\\n.login .error {\\n  color: var(--negative);\\n  font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxqdWxpby5zaWx2YVxcRG9jdW1lbnRzXFxHaXRIdWJcXHBvaW50LWNvbnRyb2wtYW5ndWxhci9zcmNcXGFwcFxcbG9naW5cXGxvZ2luLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjtBREFFO0VBQ0UsYUFBQTtFQUNBLGdCQUFBO0FDRUo7QURDSTtFQUNFLFdBQUE7QUNDTjtBREVFO0VBQ0UsdUJBQUE7RUFDQSxlQUFBO0FDQUo7QURFRTtFQUNFLHNCQUFBO0VBQ0EsZUFBQTtBQ0FKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4ge1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgLm1hdC1jYXJkIHtcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDMwMHB4O1xyXG4gIH1cclxuICBmb3JtIHtcclxuICAgIC5tYXQtZm9ybS1maWVsZCB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG4gIH1cclxuICAudmlzaWJpbGl0eSB7XHJcbiAgICBjb2xvcjogdmFyKC0tc2Vjb25kYXJ5KTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICB9XHJcbiAgLmVycm9yIHtcclxuICAgIGNvbG9yOiB2YXIoLS1uZWdhdGl2ZSk7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfVxyXG59XHJcbiIsIi5sb2dpbiB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG4ubG9naW4gLm1hdC1jYXJkIHtcbiAgcGFkZGluZzogMjBweDtcbiAgbWF4LXdpZHRoOiAzMDBweDtcbn1cbi5sb2dpbiBmb3JtIC5tYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmxvZ2luIC52aXNpYmlsaXR5IHtcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeSk7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5sb2dpbiAuZXJyb3Ige1xuICBjb2xvcjogdmFyKC0tbmVnYXRpdmUpO1xuICBmb250LXNpemU6IDEycHg7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public login = new FormControl('', [Validators.required]);\r\n  public password = new FormControl('', [Validators.required]);\r\n  public error: boolean = false;\r\n  public visibility: boolean = false;\r\n\r\n  constructor(\r\n    private LoginService: LoginService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getErrorMessage(field) {\r\n    return this[field].hasError('required') ? 'O preenchimento é obrigatório' : '';\r\n  }\r\n\r\n  onLogin() {\r\n    this.LoginService.login(this.login.value, this.password.value).subscribe(\r\n      data => {\r\n        sessionStorage.setItem('auth', JSON.stringify(data));\r\n        this.router.navigate(['/']);\r\n      },\r\n      dataError => {\r\n        this.error = true;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {\r\n  MatFormFieldModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatNativeDateModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule\r\n} from '@angular/material';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    // angular material\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSidenavModule,\r\n    MatSnackBarModule,\r\n    // login modules\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    FlexLayoutModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  declarations: [\r\n    LoginComponent\r\n  ]\r\n})\r\nexport class LoginModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { LoginResponse } from './login.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  private baseUrl = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  login(login: string, password: string) : Observable<LoginResponse> {\r\n    let url = this.baseUrl + '/auth/login';\r\n    return this.http.post<LoginResponse>(url, {\r\n      login: login,\r\n      password: password\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}